#!/bin/bash

[ -z $1 ] && echo "Error: Argument missing ! Usage : worker <master IP:port> -I <input directory> <input directory> … <input directory> -O <output directory> [-ascii]" && exit 1
ipport=$1
shift

inputdirs=()
outputdir=""
input_data_type="byte"  # Valeur par défaut
while [ "$#" -gt 0 ]; do
  case "$1" in
    -ascii)
      input_data_type="ascii"
      shift;;
    -I | --input)
      shift
      while [ "$#" -gt 0 ] && [ "${1:0:1}" != "-" ]; do
        inputdirs+=( "$1" )
        shift
      done;;
    -O | --output)
      shift
      if [ "$#" -gt 0 ] && [ "${1:0:1}" != "-" ]; then
        outputdir="$1"
        shift
      else
        echo "Error: Missing argument for output directory" >&2
        exit 1
      fi;;
    -*)
      echo "Error: Unknown option: $1" >&2
      exit 1;;
    *)
      break;;
  esac
done

if [ "${#inputdirs[@]}" -lt 1 ]
then
  echo "Error: you need to provide at least one input folder"
  exit 1
fi
[[ "$outputdir" == "" ]] && echo "Error: No output path provided" && exit 1


for dir in ${inputdirs[*]}; do
    if [ ! -d $dir ] ; then
      echo "Error: Directory not found : $dir" && exit 1
    fi
done
if [ ! -d $outputdir ] ; then
      echo "Error: Directory not found : $outputdir" && exit 1
fi

platform=""
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  platform="linux"
else
  echo "Error : Unsupported OS" && exit 1
fi

#!/bin/bash

# Specify the path
tmp_path="/tmp/sortnet_TMP/data/tmp"

# Check if each folder in the path exists, create if not
IFS='/' read -ra folders <<< "$tmp_path"
current_path=""
for folder in "${folders[@]}"; do
    current_path="$current_path/$folder"
    if [ ! -d "$current_path" ]; then
        #echo "Creating folder: $current_path"
        mkdir "$current_path"
    #else
        #echo "Folder already exists: $current_path"
    fi
done

rm -rf /tmp/sortnet_TMP/data/tmp/*

outputdir=$(readlink -f "$outputdir")

for i in "${!inputdirs[@]}"; do
    inputdirs[i]=$(readlink -f "${inputdirs[i]}")
done

rm -rf $outputdir
mkdir $outputdir

filedir=$(dirname "$(readlink -f "$0")")
homedir=$(dirname "$filedir")


cd $homedir


export SBT_OPTS="-Dlog4j.configurationFile=${filedir}/../conf/log4j2.xml"

sbt "worker/runMain com.cs434.sortnet.worker.Worker ${ipport} ${outputdir} ${input_data_type} ${inputdirs[*]}"

#rm -rf /tmp/sortnet_TMP